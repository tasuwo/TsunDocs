///
/// @Generated by Mockolo
///

import CompositeKit
import Domain
import TsunDocsUIKit

class TagListStoreBuildableMock: TagListStoreBuildable {
    init() { }

    private(set) var buildTagListStoreCallCount = 0
    var buildTagListStoreHandler: (() -> (ViewStore<TagListState, TagListAction, TagListDependency>))?
    func buildTagListStore() -> ViewStore<TagListState, TagListAction, TagListDependency> {
        buildTagListStoreCallCount += 1
        if let buildTagListStoreHandler = buildTagListStoreHandler {
            return buildTagListStoreHandler()
        }
        fatalError("buildTagListStoreHandler returns can't have a default value thus its handler must be set")
    }
}

class TsundocListStoreBuildableMock: TsundocListStoreBuildable {
    init() { }

    private(set) var buildTsundocListStoreCallCount = 0
    var buildTsundocListStoreHandler: ((TsundocListState.Query) -> (ViewStore<TsundocListState, TsundocListAction, TsundocListDependency>))?
    func buildTsundocListStore(query: TsundocListState.Query) -> ViewStore<TsundocListState, TsundocListAction, TsundocListDependency> {
        buildTsundocListStoreCallCount += 1
        if let buildTsundocListStoreHandler = buildTsundocListStoreHandler {
            return buildTsundocListStoreHandler(query)
        }
        fatalError("buildTsundocListStoreHandler returns can't have a default value thus its handler must be set")
    }
}

class TagMultiAdditionViewStoreBuildableMock: TagMultiAdditionViewStoreBuildable {
    init() { }

    private(set) var buildTagMultiAdditionViewStoreCallCount = 0
    var buildTagMultiAdditionViewStoreHandler: ((Set<Tag.ID>) -> (ViewStore<TagMultiAdditionViewState, TagMultiAdditionViewAction, TagMultiAdditionViewDependency>))?
    func buildTagMultiAdditionViewStore(selectedIds: Set<Tag.ID>) -> ViewStore<TagMultiAdditionViewState, TagMultiAdditionViewAction, TagMultiAdditionViewDependency> {
        buildTagMultiAdditionViewStoreCallCount += 1
        if let buildTagMultiAdditionViewStoreHandler = buildTagMultiAdditionViewStoreHandler {
            return buildTagMultiAdditionViewStoreHandler(selectedIds)
        }
        fatalError("buildTagMultiAdditionViewStoreHandler returns can't have a default value thus its handler must be set")
    }
}
