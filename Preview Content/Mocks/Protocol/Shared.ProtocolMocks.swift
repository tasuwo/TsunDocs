///
/// @Generated by Mockolo
///

import CompositeKit
import Domain

class HasTsundocQueryServiceMock: HasTsundocQueryService {
    init() { }
    init(tsundocQueryService: TsundocQueryService) {
        self._tsundocQueryService = tsundocQueryService
    }

    private(set) var tsundocQueryServiceSetCallCount = 0
    private var _tsundocQueryService: TsundocQueryService! { didSet { tsundocQueryServiceSetCallCount += 1 } }
    var tsundocQueryService: TsundocQueryService {
        get { return _tsundocQueryService }
        set { _tsundocQueryService = newValue }
    }
}

class TsundocListStoreBuildableMock: TsundocListStoreBuildable {
    init() { }

    private(set) var buildTsundocListStoreCallCount = 0
    var buildTsundocListStoreHandler: (() -> (ViewStore<TsundocListState, TsundocListAction, TsundocListDependency>))?
    func buildTsundocListStore() -> ViewStore<TsundocListState, TsundocListAction, TsundocListDependency> {
        buildTsundocListStoreCallCount += 1
        if let buildTsundocListStoreHandler = buildTsundocListStoreHandler {
            return buildTsundocListStoreHandler()
        }
        fatalError("buildTsundocListStoreHandler returns can't have a default value thus its handler must be set")
    }
}

class HasTagQueryServiceMock: HasTagQueryService {
    init() { }
    init(tagQueryService: TagQueryService) {
        self._tagQueryService = tagQueryService
    }

    private(set) var tagQueryServiceSetCallCount = 0
    private var _tagQueryService: TagQueryService! { didSet { tagQueryServiceSetCallCount += 1 } }
    var tagQueryService: TagQueryService {
        get { return _tagQueryService }
        set { _tagQueryService = newValue }
    }
}

class HasTsundocCommandServiceMock: HasTsundocCommandService {
    init() { }
    init(tsundocCommandService: TsundocCommandService) {
        self._tsundocCommandService = tsundocCommandService
    }

    private(set) var tsundocCommandServiceSetCallCount = 0
    private var _tsundocCommandService: TsundocCommandService! { didSet { tsundocCommandServiceSetCallCount += 1 } }
    var tsundocCommandService: TsundocCommandService {
        get { return _tsundocCommandService }
        set { _tsundocCommandService = newValue }
    }
}

class HasTagCommandServiceMock: HasTagCommandService {
    init() { }
    init(tagCommandService: TagCommandService) {
        self._tagCommandService = tagCommandService
    }

    private(set) var tagCommandServiceSetCallCount = 0
    private var _tagCommandService: TagCommandService! { didSet { tagCommandServiceSetCallCount += 1 } }
    var tagCommandService: TagCommandService {
        get { return _tagCommandService }
        set { _tagCommandService = newValue }
    }
}
